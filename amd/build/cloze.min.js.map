{"version":3,"file":"cloze.min.js","sources":["../src/cloze.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Helper functions for the tiny_cloze plugin for Moodle.\n *\n * @module      tiny_cloze\n * @copyright   2025 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const isNull = a => typeof a === 'undefined' || a === null;\nexport const strdecode = t => String(t).replace(/\\\\(#|\\}|~)/g, '$1');\nexport const strencode = t => String(t).replace(/(#|\\}|~)/g, '\\\\$1');\n\n/**\n * Check at which position a given node is in the list.\n *\n * @param {Array} list\n * @param {Node} node\n * @returns {Number}\n */\nexport const indexOfNode = (list, node) => {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] === node) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nexport const hasInvalidChars = (text) => {\n  // Remove pattern like \\. or \\$\n  const regex = /\\\\[.^$*+{}\\\\/]/g;\n  text = text.replace(regex, '');\n  for (const c of '.^$*+{}\\\\/'.split('')) {\n    // If the special char is not still in the string, it was not escaped by \\\n    if (text.indexOf(c) > -1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Get a unique identifier, used for every response field.\n *\n * @returns {string}\n */\nexport const getUuid = function() {\n  if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n  return 'ed-cloze-' + Math.floor(Math.random() * 100000).toString().padStart(5, '0');\n};\n\n// Grade Selector value when custom percentage is selected.\nexport const selectCustomPercent = '__custom__';\n\n/**\n * Helper function to return the options html for the fraction select element.\n * The options are incorrect, correct, 100%, 50%, 0% and custom. The submitted\n * value will be selected.\n *\n * @param {string} s\n * @returns {string}\n */\nexport const getFractionOptions = s => {\n  const attrSel = ' selected=\"selected\"';\n  let isSel = s === '=' ? attrSel : '';\n  let html = `<option value=\"\">${STR.incorrect}</option><option value=\"=\"${isSel}>${STR.correct}</option>`;\n  FRACTIONS.forEach(item => {\n    isSel = item.value.toString() === s ? attrSel : '';\n    html += `<option value=\"${item.value}\"${isSel}>${item.value}%</option>`;\n  });\n  isSel = s !== '' && html.indexOf(attrSel) === -1 ? attrSel : '';\n  html += `<option value=\"${selectCustomPercent}\"${isSel}>${STR.custom_grade}</option>`;\n  return html;\n};\n\n/**\n * Check if the value is a custom grade value (in order to show the input field).\n *\n * @param {string} s\n * @returns {boolean}\n */\nexport const isCustomGrade = s => {\n  if (s === '=' || s === '') {\n    return false;\n  }\n  let found = false;\n  FRACTIONS.forEach(item => {\n    if (item.value.toString() === s) {\n      found = true;\n    }\n  });\n  return !found;\n};\n\n// CSS classes that are used in the modal dialogue.\nexport const CSS = {\n  ANSWER: 'tiny_cloze_answer',\n  ANSWERS: 'tiny_cloze_answers',\n  ADD: 'tiny_cloze_add',\n  CANCEL: 'tiny_cloze_cancel',\n  DELETE: 'tiny_cloze_delete',\n  FEEDBACK: 'tiny_cloze_feedback',\n  FRACTION: 'tiny_cloze_fraction',\n  FRAC_CUSTOM: 'tiny_cloze_frac_custom',\n  LEFT: 'tiny_cloze_col0',\n  LOWER: 'tiny_cloze_down',\n  RIGHT: 'tiny_cloze_col1',\n  MARKS: 'tiny_cloze_marks',\n  DUPLICATE: 'tiny_cloze_duplicate',\n  RAISE: 'tiny_cloze_up',\n  SUBMIT: 'tiny_cloze_submit',\n  SUMMARY: 'tiny_cloze_summary',\n  TOLERANCE: 'tiny_cloze_tolerance',\n  TYPE: 'tiny_cloze_qtype'\n};\n\n// Values to indicate whether a response is correct or not. These appear in the selection.\nconst FRACTIONS = [\n  {value: 100},\n  {value: 50},\n  {value: 0},\n];\n\n// Language strings used in the modal dialogue.\nconst STR = {};\n\n/**\n * Return the question types that are available for the cloze question.\n *\n * @param {boolean} withMultianswerrgx Whether to include the regular expression question types.\n * @returns {Array}\n */\nexport const getQuestionTypes = function(withMultianswerrgx) {\n  let qtypes = [\n    {\n      'type': 'MULTICHOICE',\n      'abbr': ['MC'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.selectinline, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_H',\n      'abbr': ['MCH'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.horizontal, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_V',\n      'abbr': ['MCV'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.vertical, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_S',\n      'abbr': ['MCS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.selectinline, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_HS',\n      'abbr': ['MCHS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.horizontal, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_VS',\n      'abbr': ['MCVS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.vertical, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTIRESPONSE',\n      'abbr': ['MR'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_vertical, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_H',\n      'abbr': ['MRH'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_horizontal, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_S',\n      'abbr': ['MRS'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_vertical, STR.shuffle, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_HS',\n      'abbr': ['MRHS'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_horizontal, STR.shuffle, STR.singleno],\n    },\n    {\n      'type': 'NUMERICAL',\n      'abbr': ['NM'],\n      'name': STR.numerical,\n      'summary': STR.summary_numerical,\n    },\n    {\n      'type': 'SHORTANSWER',\n      'abbr': ['SA', 'MW'],\n      'name': STR.shortanswer,\n      'summary': STR.summary_shortanswer,\n      'options': [STR.caseno],\n    },\n    {\n      'type': 'SHORTANSWER_C',\n      'abbr': ['SAC', 'MWC'],\n      'name': STR.shortanswer,\n      'summary': STR.summary_shortanswer,\n      'options': [STR.caseyes],\n    },\n  ];\n  if (withMultianswerrgx) {\n    qtypes.splice(11, 0, {\n      'type': 'REGEXP',\n      'abbr': ['RX'],\n      'name': STR.regexp,\n      'summary': STR.summary_regexp,\n      'options': [STR.caseno],\n    }, {\n      'type': 'REGEXP_C',\n      'abbr': ['RXC'],\n      'name': STR.regexp,\n      'summary': STR.summary_regexp,\n      'options': [STR.caseyes],\n    });\n  }\n  return qtypes;\n};\n\n/**\n * Return the CSS object (containing class names for the different icons and elements).\n *\n * @returns {object}\n */\nexport const getCss = function() {\n  return CSS;\n};\n\n/**\n * Check if the node has the given class derived from the CSS object.\n *\n * @param {Node} node\n * @param {string} className\n * @returns {boolean}\n */\nexport const hasClass = function(node, className) {\n  return node.classList.contains(CSS[className]);\n};\n\n/**\n * Get query selector for the given class name from the CSS object.\n *\n * @param {string} className\n * @returns {string}\n */\nexport const queryClass = function(className) {\n  return `.${CSS[className]}`;\n};\n\n/**\n * Set string value in STR object.\n *\n * @param {string} key\n * @param {string} val\n */\nexport const setStr = function(key, val) {\n  STR[key] = val;\n};\n\n/**\n * Get value from STR object or return the key, if not found.\n * If key is '*', return the whole STR object.\n *\n * @param {string} key\n * @returns {string|object}\n */\nexport const getStr = function(key) {\n  if (key === '*') {\n    return STR;\n  }\n  return STR[key] ?? key;\n};\n"],"names":["a","t","String","replace","list","node","i","length","text","c","split","indexOf","crypto","randomUUID","Math","floor","random","toString","padStart","s","attrSel","isSel","html","STR","incorrect","correct","FRACTIONS","forEach","item","value","custom_grade","found","CSS","ANSWER","ANSWERS","ADD","CANCEL","DELETE","FEEDBACK","FRACTION","FRAC_CUSTOM","LEFT","LOWER","RIGHT","MARKS","DUPLICATE","RAISE","SUBMIT","SUMMARY","TOLERANCE","TYPE","withMultianswerrgx","qtypes","multichoice","summary_multichoice","selectinline","singleyes","horizontal","vertical","shuffle","multiresponse","multi_vertical","singleno","multi_horizontal","numerical","summary_numerical","shortanswer","summary_shortanswer","caseno","caseyes","splice","regexp","summary_regexp","className","classList","contains","key","val"],"mappings":"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"}