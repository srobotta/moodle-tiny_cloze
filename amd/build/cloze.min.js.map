{"version":3,"file":"cloze.min.js","sources":["../src/cloze.js"],"sourcesContent":["const isNull = a => typeof a === 'undefined' || a === null;\nconst strdecode = t => String(t).replace(/\\\\(#|\\}|~)/g, '$1');\nconst strencode = t => String(t).replace(/(#|\\}|~)/g, '\\\\$1');\nconst indexOfNode = (list, node) => {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] === node) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst getUuid = function() {\n  if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') {\n    return crypto.randomUUID();\n  }\n  return 'ed-cloze-' + Math.floor(Math.random() * 100000).toString().padStart(5, '0');\n};\n// Grade Selector value when custom percentage is selected.\nconst selectCustomPercent = '__custom__';\n// This is a specific helper function to return the options html for the fraction select element.\nconst getFractionOptions = s => {\n  const attrSel = ' selected=\"selected\"';\n  let isSel = s === '=' ? attrSel : '';\n  let html = `<option value=\"\">${STR.incorrect}</option><option value=\"=\"${isSel}>${STR.correct}</option>`;\n  FRACTIONS.forEach(item => {\n    isSel = item.value.toString() === s ? attrSel : '';\n    html += `<option value=\"${item.value}\"${isSel}>${item.value}%</option>`;\n  });\n  isSel = s !== '' && html.indexOf(attrSel) === -1 ? attrSel : '';\n  html += `<option value=\"${selectCustomPercent}\"${isSel}>${STR.custom_grade}</option>`;\n  return html;\n};\n// Check if the value is a custom grade value (in order to show the input field).\nconst isCustomGrade = s => {\n  if (s === '=' || s === '') {\n    return false;\n  }\n  let found = false;\n  FRACTIONS.forEach(item => {\n    if (item.value.toString() === s) {\n      found = true;\n    }\n  });\n  return !found;\n};\n\n// CSS classes that are used in the modal dialogue.\nconst CSS = {\n  ANSWER: 'tiny_cloze_answer',\n  ANSWERS: 'tiny_cloze_answers',\n  ADD: 'tiny_cloze_add',\n  CANCEL: 'tiny_cloze_cancel',\n  DELETE: 'tiny_cloze_delete',\n  FEEDBACK: 'tiny_cloze_feedback',\n  FRACTION: 'tiny_cloze_fraction',\n  FRAC_CUSTOM: 'tiny_cloze_frac_custom',\n  LEFT: 'tiny_cloze_col0',\n  LOWER: 'tiny_cloze_down',\n  RIGHT: 'tiny_cloze_col1',\n  MARKS: 'tiny_cloze_marks',\n  DUPLICATE: 'tiny_cloze_duplicate',\n  RAISE: 'tiny_cloze_up',\n  SUBMIT: 'tiny_cloze_submit',\n  SUMMARY: 'tiny_cloze_summary',\n  TOLERANCE: 'tiny_cloze_tolerance',\n  TYPE: 'tiny_cloze_qtype'\n};\n\nconst FRACTIONS = [\n  {value: 100},\n  {value: 50},\n  {value: 0},\n];\n\n// Language strings used in the modal dialogue.\nconst STR = {};\n\n/**\n * Return the question types that are available for the cloze question.\n * @param {boolean} withMultianswerrgx Whether to include the regular expression question types.\n * @returns {Array}\n * @private\n */\nconst getQuestionTypes = function(withMultianswerrgx) {\n  let qtypes = [\n    {\n      'type': 'MULTICHOICE',\n      'abbr': ['MC'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.selectinline, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_H',\n      'abbr': ['MCH'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.horizontal, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_V',\n      'abbr': ['MCV'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.vertical, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_S',\n      'abbr': ['MCS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.selectinline, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_HS',\n      'abbr': ['MCHS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.horizontal, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_VS',\n      'abbr': ['MCVS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.vertical, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTIRESPONSE',\n      'abbr': ['MR'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_vertical, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_H',\n      'abbr': ['MRH'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_horizontal, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_S',\n      'abbr': ['MRS'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_vertical, STR.shuffle, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_HS',\n      'abbr': ['MRHS'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_horizontal, STR.shuffle, STR.singleno],\n    },\n    {\n      'type': 'NUMERICAL',\n      'abbr': ['NM'],\n      'name': STR.numerical,\n      'summary': STR.summary_numerical,\n    },\n    {\n      'type': 'SHORTANSWER',\n      'abbr': ['SA', 'MW'],\n      'name': STR.shortanswer,\n      'summary': STR.summary_shortanswer,\n      'options': [STR.caseno],\n    },\n    {\n      'type': 'SHORTANSWER_C',\n      'abbr': ['SAC', 'MWC'],\n      'name': STR.shortanswer,\n      'summary': STR.summary_shortanswer,\n      'options': [STR.caseyes],\n    },\n  ];\n  if (withMultianswerrgx) {\n    qtypes.splice(11, 0, {\n      'type': 'REGEXP',\n      'abbr': ['RX'],\n      'name': STR.regexp,\n      'summary': STR.summary_regexp,\n      'options': [STR.caseno],\n    }, {\n      'type': 'REGEXP_C',\n      'abbr': ['RXC'],\n      'name': STR.regexp,\n      'summary': STR.summary_regexp,\n      'options': [STR.caseyes],\n    });\n  }\n  return qtypes;\n};\n\n/**\n * Return the CSS object (containing class names for the different icons and elements).\n * @returns {object}\n */\nconst getCss = function() {\n  return CSS;\n};\n\n/**\n * Check if the node has the given class derived from the CSS object.\n * @param {Node} node\n * @param {string} className\n * @returns {boolean}\n */\nconst hasClass = function(node, className) {\n  return node.classList.contains(CSS[className]);\n};\n\n/**\n * Get query selector for the given class name from the CSS object.\n * @param {string} className\n * @returns {string}\n */\nconst queryClass = function(className) {\n  return `.${CSS[className]}`;\n};\n\n/**\n * Set string value in STR object.\n * @param {string} key\n * @param {string} val\n */\nconst setStr = function(key, val) {\n  STR[key] = val;\n};\n\n/**\n * Get value from STR object or return the key, if not found.\n * If key is '*', return the whole STR object.\n * @param {string} key\n * @returns {string|object}\n */\nconst getStr = function(key) {\n  if (key === '*') {\n    return STR;\n  }\n  return STR[key] ?? key;\n};\n\nexport {\n  isNull,\n  isCustomGrade,\n  indexOfNode,\n  getCss,\n  hasClass,\n  queryClass,\n  getUuid,\n  getFractionOptions,\n  selectCustomPercent,\n  strdecode,\n  strencode,\n  getQuestionTypes,\n  getStr,\n  setStr\n};"],"names":["a","t","String","replace","list","node","i","length","crypto","randomUUID","Math","floor","random","toString","padStart","s","attrSel","isSel","html","STR","incorrect","correct","FRACTIONS","forEach","item","value","indexOf","custom_grade","found","CSS","ANSWER","ANSWERS","ADD","CANCEL","DELETE","FEEDBACK","FRACTION","FRAC_CUSTOM","LEFT","LOWER","RIGHT","MARKS","DUPLICATE","RAISE","SUBMIT","SUMMARY","TOLERANCE","TYPE","withMultianswerrgx","qtypes","multichoice","summary_multichoice","selectinline","singleyes","horizontal","vertical","shuffle","multiresponse","multi_vertical","singleno","multi_horizontal","numerical","summary_numerical","shortanswer","summary_shortanswer","caseno","caseyes","splice","regexp","summary_regexp","className","classList","contains","key","val"],"mappings":"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"}